LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [GPU-8a20deb1-e8a8-fdfe-cb99-24483695d004]
  | Name      | Type   | Params
-------------------------------------
0 | VAE_model | ODEVAE | 80.8 K
-------------------------------------
80.8 K    Trainable params
0         Non-trainable params
80.8 K    Total params
0.323     Total estimated model params size (MB)
Traceback (most recent call last):
  File "/home/rc667/Experiment_2/main_2.py", line 44, in <module>
    main()
  File "/home/rc667/Experiment_2/main_2.py", line 37, in main
    trainer.fit(ode_vae_model, cv_data_module)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 544, in fit
    call._call_and_handle_interrupt(
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 44, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 580, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 989, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1033, in _run_stage
    self._run_sanity_check()
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1062, in _run_sanity_check
    val_loop.run()
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/loops/utilities.py", line 182, in _decorator
    return loop_run(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 134, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 391, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 309, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/pytorch_lightning/strategies/strategy.py", line 403, in validation_step
    return self.lightning_module.validation_step(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/Experiment_2/models_2.py", line 513, in validation_step
    self.plot_trajectories( X, Y, Y_hat, chart_type = "val" )
  File "/home/rc667/Experiment_2/models_2.py", line 596, in plot_trajectories
    fig = px.line(df, x="time", y="Blood Pressure", color='type',
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/express/_chart_types.py", line 264, in line
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/express/_core.py", line 2179, in make_figure
    m.updater(trace, m.val_map[val])  # covers most cases
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/express/_core.py", line 242, in <lambda>
    updater=lambda trace, v: trace.update(
                             ^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/basedatatypes.py", line 5139, in update
    BaseFigure._perform_update(self, dict1, overwrite=overwrite)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/basedatatypes.py", line 3919, in _perform_update
    BaseFigure._perform_update(plotly_obj[key], val)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/basedatatypes.py", line 3940, in _perform_update
    plotly_obj[key] = val
    ~~~~~~~~~~^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/basedatatypes.py", line 4874, in __setitem__
    self._set_prop(prop, value)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/basedatatypes.py", line 5218, in _set_prop
    raise err
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/plotly/basedatatypes.py", line 5213, in _set_prop
    val = validator.validate_coerce(val)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/_plotly_utils/basevalidators.py", line 1383, in validate_coerce
    self.raise_invalid_val(v)
  File "/home/rc667/.conda/envs/exp1/lib/python3.11/site-packages/_plotly_utils/basevalidators.py", line 296, in raise_invalid_val
    raise ValueError(
ValueError:
    Invalid value of type 'builtins.str' received for the 'color' property of scatter.line
        Received value: 'darkskyblue'
    The 'color' property is a color and may be specified as:
      - A hex string (e.g. '#ff0000')
      - An rgb/rgba string (e.g. 'rgb(255,0,0)')
      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')
      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')
      - A named CSS color:
            aliceblue, antiquewhite, aqua, aquamarine, azure,
            beige, bisque, black, blanchedalmond, blue,
            blueviolet, brown, burlywood, cadetblue,
            chartreuse, chocolate, coral, cornflowerblue,
            cornsilk, crimson, cyan, darkblue, darkcyan,
            darkgoldenrod, darkgray, darkgrey, darkgreen,
            darkkhaki, darkmagenta, darkolivegreen, darkorange,
            darkorchid, darkred, darksalmon, darkseagreen,
            darkslateblue, darkslategray, darkslategrey,
            darkturquoise, darkviolet, deeppink, deepskyblue,
            dimgray, dimgrey, dodgerblue, firebrick,
            floralwhite, forestgreen, fuchsia, gainsboro,
            ghostwhite, gold, goldenrod, gray, grey, green,
            greenyellow, honeydew, hotpink, indianred, indigo,
            ivory, khaki, lavender, lavenderblush, lawngreen,
            lemonchiffon, lightblue, lightcoral, lightcyan,
            lightgoldenrodyellow, lightgray, lightgrey,
            lightgreen, lightpink, lightsalmon, lightseagreen,
            lightskyblue, lightslategray, lightslategrey,
            lightsteelblue, lightyellow, lime, limegreen,
            linen, magenta, maroon, mediumaquamarine,
            mediumblue, mediumorchid, mediumpurple,
            mediumseagreen, mediumslateblue, mediumspringgreen,
            mediumturquoise, mediumvioletred, midnightblue,
            mintcream, mistyrose, moccasin, navajowhite, navy,
            oldlace, olive, olivedrab, orange, orangered,
            orchid, palegoldenrod, palegreen, paleturquoise,
            palevioletred, papayawhip, peachpuff, peru, pink,
            plum, powderblue, purple, red, rosybrown,
            royalblue, rebeccapurple, saddlebrown, salmon,
            sandybrown, seagreen, seashell, sienna, silver,
            skyblue, slateblue, slategray, slategrey, snow,
            springgreen, steelblue, tan, teal, thistle, tomato,
            turquoise, violet, wheat, white, whitesmoke,
            yellow, yellowgreen
Sanity Checking DataLoader 0:   0%|                                                                                                | 0/2 [00:00<?, ?it/s]